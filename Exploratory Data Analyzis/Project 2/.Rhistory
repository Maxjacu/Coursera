}
View(locations)
for (i in 1:nrow(locations))  {
locations$place[i] <-
if (locations$Distanceto.home[i] <0.5) {"Home"}
if (locations$Distanceto.work[i] <0.5) {"Work"}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5) {locations$place[i] = "Home"}
if (locations$Distanceto.work[i] <0.5) {locations$place[i] = "Work"}
}
View(locations)
locations$Distanceto.home <- ""
for (i in 1:nrow(locations))  {
locations$Distanceto.home[i] <- gcd.slc(locations$Lon[i], locations$Lat[i], home[1], home[2])
locations$Distanceto.work[i] <- gcd.slc(locations$Lon[i], locations$Lat[i], work[1], work[2])
locations$DayNr[i] <- as.Date(locations$DateTime[i])-as.Date( locations$DateTime[1])
}
locations$place <- ""
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5) {locations$place[i] = "Home" & locations$Speed[i] <0.001}
if (locations$Distanceto.work[i] <0.5) {locations$place[i] = "Work" & locations$Speed[i] <0.001}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5 & locations$Speed[i] <0.001) {locations$place[i] = "Home" }
if (locations$Distanceto.work[i] <0.5 & locations$Speed[i] <0.001) {locations$place[i] = "Work" }
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5 | locations$Speed[i] < 0.001) {locations$place[i] = "Home" }
if (locations$Distanceto.work[i] <0.5 | locations$Speed[i] < 0.001) {locations$place[i] = "Work" }
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5 ) {locations$place[i] = "Home" }
if (locations$Distanceto.work[i] <0.5 ) {locations$place[i] = "Work" }
}
locations$place <- ""
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5 & if (locations$Speed[i] < 0.001)) {locations$place[i] = "Home" }
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001) {
locations$place[i] = "Work"
}
}
}
locations$Speed
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 1) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 1) {
locations$place[i] = "Work"
}
}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001, na.rm=TRUE) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001, na.rm=TRUE) {
locations$place[i] = "Work"
}
}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001) {
locations$place[i] = "Work"
}
}
}
View(locations)
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 & locations$Speed[i+1] < 0.001) {
locations$place[i] = "Home"
}
else {
locations$commute[i+1] <- Hometo.Work
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 & locations$Speed[i+1] < 0.001) {
locations$place[i] = "Work"
}
else {
locations$commute[i+1] <- Workto.home
}
}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 & locations$Speed[i+1] < 0.001) {
locations$place[i] = "Home"
}
else {
locations$commute[i+1] <- "Hometo.Work"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 & locations$Speed[i+1] < 0.001) {
locations$place[i] = "Work"
}
else {
locations$commute[i+1] <- "Workto.home"
}
}
}
View(locations)
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Home"
}
else {
locations$commute[i+1] <- "Hometo.Work"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Work"
}
else {
locations$commute[i+1] <- "Workto.home"
}
}
}
View(locations)
ocations$commute <- ""
ocations$place <- ""
locations$place <- ""
locations$commute <- ""
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Home"
}
else {
locations$commute[i+1] <- "Hometo.Work"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Work"
}
else {
locations$commute[i+1] <- "Workto.home"
}
}
}
View(locations)
locations$commute <- ""
locations$place <- ""
View(locations)
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Work"
}
}
}
View(locations)
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.01 ) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.01 ) {
locations$place[i] = "Work"
}
}
}
View(locations)
write.csv(locations, "LocationHistory_clustered.csv")
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.01 ) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.01 ) {
locations$place[i] = "Work"
}
}
}
View(locations)
library("plyr", lib.loc="C:/Users/z002hezy/AppData/Local/R")
count(locations$place)
count(locations$place[1])
count(locations$place[0])
count(locations$place[2])
#Read data
NEI  <- readRDS("summarySCC_PM25.rds")
SCC  <- readRDS("Source_Classification_Code.rds")
#Plot 1: Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission")
#Save to png
dev.copy(png, file = "plot1.png")  ## Copy my plot to a PNG file
dev.off()
setwd("~/GitHub/Coursera2/Exploratory Data Analyzis/Project 2")
#Read data
NEI  <- readRDS("summarySCC_PM25.rds")
SCC  <- readRDS("Source_Classification_Code.rds")
#Plot 1: Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission")
#Save to png
dev.copy(png, file = "plot1.png")  ## Copy my plot to a PNG file
dev.off()
#Read data
NEI  <- readRDS("summarySCC_PM25.rds")
SCC  <- readRDS("Source_Classification_Code.rds")
#Plot 1: Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission")
#Save to png
dev.copy(png, file = "plot1.png")  ## Copy my plot to a PNG file
dev.off()
#Plot 2 : Have total emissions from PM2.5 decreased in the Baltimore City,
#         Maryland (fips == "24510") from 1999 to 2008?
NEI.Baltimore <- NEI[NEI$fips == "24510",]
barplot(t(sapply(split(NEI.Baltimore$Emissions, NEI.Baltimore$year), sum)), ylab="PM2.5 emission")
#Save to png
dev.copy(png, file = "plot2.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI.Baltimore$Emissions, NEI.Baltimore$year), sum)), ylab="PM2.5 emission", main="Baltimore Emission trend 1999 - 2008")
dev.copy(png, file = "plot2.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission"
main="Emission trend 1999 - 2008")
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission",
main="Emission trend 1999 - 2008")
requier(ggplot2)
require(ggplot2)
for ( i in unique(NEI.Baltimore$type)) {
barplot(t(sapply(split(NEI.Baltimore$Emissions, NEI.Baltimore$year), sum)), ylab="PM2.5 emission",
main="Baltimore Emission trend 1999 - 2008")
}
unique(NEI.Baltimore$type)
for ( i in 1:lenght(unique(NEI.Baltimore$type))) {
barplot(t(sapply(split(NEI.Baltimore$Emissions, NEI.Baltimore$year), sum)), ylab="PM2.5 emission",
main="Baltimore Emission trend 1999 - 2008")
}
for ( i in 1:nrow(unique(NEI.Baltimore$type))) {
barplot(t(sapply(split(NEI.Baltimore$Emissions, NEI.Baltimore$year), sum)), ylab="PM2.5 emission",
main="Baltimore Emission trend 1999 - 2008")
}
NEI.Baltime.Types <- data.frame()
for ( i in unique(NEI.Baltimore$type)) {
type.temp <- NEI.Baltimore$Emissions[EI.Baltimore$type == [i]]
NEI.Baltime.Types[i] <- t(sapply(split(type.temp$Emissions, type.temp$year), sum))
}
for ( i in unique(NEI.Baltimore$type)) {
type.temp <- NEI.Baltimore$Emissions[EI.Baltimore$type == [i]]
for ( i in unique(NEI.Baltimore$type)) {
type.temp <- NEI.Baltimore$Emissions[EI.Baltimore$type == [i],]
type.temp <- NEI.Baltimore[EI.Baltimore$type == [i],]
for ( i in unique(NEI.Baltimore$type)) {
type.temp <- NEI.Baltimore[EI.Baltimore$type == [i],]
type.temp <- NEI.Baltimore[EI.Baltimore$type == [i],]
NEI.Baltime.Types[i] <- t(sapply(split(type.temp$Emissions, type.temp$year), sum))
}
NEI.Baltime.Types <- data.frame()
for ( i in unique(NEI.Baltimore$type)) {
type.temp <- NEI.Baltimore[EI.Baltimore$type == [i],]
for ( i in unique(NEI.Baltimore$type)) {
type.temp <- NEI.Baltimore[EI.Baltimore$type == i,]
NEI.Baltime.Types[i] <- t(sapply(split(type.temp$Emissions, type.temp$year), sum))
}
for ( i in unique(NEI.Baltimore$type)) {
type.temp <- NEI.Baltimore[NEI.Baltimore$type == i,]
NEI.Baltime.Types[i] <- t(sapply(split(type.temp$Emissions, type.temp$year), sum))
}
require(data.table)
NEI.B
NEI.B <- NEI[NEI$fips == "24510",]
NEI.B[, sum(Emissions), by = type]
NEI.B[, sum(Emissions), by = type]
NEI.B <- data.table(NEI[NEI$fips == "24510",])
NEI.B[, sum(Emissions), by = type]
NEI.B.type <- data.table()
for ( i in unique(NEI.B$type)) {
NEI.B.type <- data.table(NEI.B[NEI.B$type == i,])
NEI.B.type[i] <- type.temp <- NEI.B[, sum(Emissions), by = year]
}
NEI.B.type <- data.table(NEI.B[NEI.B$type == i,])
for ( i in unique(NEI.B$type)) {
NEI.B.type <- data.table(NEI.B[NEI.B$type == i,])
NEI.B.type[i] <- NEI.B.type[, sum(Emissions), by = year]
}
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == i,]
NEI.B.type[i] <- NEI.B.type[, sum(Emissions), by = year]
}
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
NEI.B.type[i] <- NEI.B.type[, sum(Emissions), by = year]
}
NEI.B.type <- data.table()
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
NEI.B.type <- data.table()
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
rbind(NEI.B.type, NEI.B.type, sum(Emissions), by = year)
}
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
rbind(NEI.B.type, NEI.B.type[, sum(Emissions), by = year])
}
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
rbind(NEI.B.type, data.frame(NEI.B.type[, sum(Emissions), by = year]))
}
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
print(data.frame(NEI.B.type[, sum(Emissions), by = year]))
}
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
return(data.frame(NEI.B.type[, sum(Emissions), by = year]))
}
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
NEI.B.type[, sum(Emissions), by = year]
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
NEI.B[NEI.B$type == "Point",]
NEI.B$type
{]}
NEI.B.type <- NEI.B[NEI.B$type == "Point",]
NEI.B
NEI.B.type <- NEI.B[NEI.B$type == "POINT",]
NEI.B.type[, sum(Emissions), by = year]
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == i,]
return(NEI.B.type[, sum(Emissions), by = year])
}
for ( i in unique(NEI.B$type)) {
NEI.B.type <- NEI.B[NEI.B$type == i,]
print(NEI.B.type[, sum(Emissions), by = year])
}
for ( i in unique(NEI.B$type)) {
NEI.B1 <- NEI.B[NEI.B$type == i,]
rbind(NEI.B2, NEI.B1[, sum(Emissions), by = year])
}
NEI.B2 <- data.frame
for ( i in unique(NEI.B$type)) {
NEI.B1 <- NEI.B[NEI.B$type == i,]
rbind(NEI.B2, NEI.B1[, sum(Emissions), by = year])
}
NEI.B2 <- data.table()
for ( i in unique(NEI.B$type)) {
NEI.B1 <- NEI.B[NEI.B$type == i,]
rbind(NEI.B2, NEI.B1[, sum(Emissions), by = year])
}
NEI.B1[, sum(Emissions), by = list(year, type]
NEI.B[, sum(Emissions), by = list(year, type]
NEI.B[, sum(Emissions), by = list(year, type)]
NEI[NEI$fips == "24510",][, sum(Emissions), by = list(year, type)]
NEI.B2[, sum(Emissions), by = year]
NEI.B2[, sum(Emissions), by = year]
NEI.B2 <- NEI.B[, sum(Emissions), by = list(year, type)]
NEI.B2[, sum(Emissions), by = year]
NEI.B2[, sum(Emissions), by = type]
NEI.B2[, sum(V1), by = type]
NEI.B2 <- NEI.B[, sum(Emissions), by = list(year, type)]
qplot(year, V1, ylab="PM2.5 emission",
main="Baltimore Emission trend 1999 - 2008", data=NEI.B2)
geom_bar(year, V1, ylab="PM2.5 emission",
main="Baltimore Emission trend 1999 - 2008", data=NEI.B2)
geom_bar(year, V1, ylab="PM2.5 emission",
main="Baltimore Emission trend 1999 - 2008", data=NEI.B2)
geom_bar(year, NEI.B2$V1, ylab="PM2.5 emission",
main="Baltimore Emission trend 1999 - 2008", data=NEI.B2)
c <- ggplot(NEI.B2, aes(factor(year)))
c + geom_bar()
c <- ggplot(NEI.B2, aes(factor(list(year, type)))
c + geom_bar()
c <- ggplot(NEI.B2, aes(factor(type)
c + geom_bar()
c <- ggplot(NEI.B2, aes(factor(type)))
c + geom_bar()
c <- ggplot(NEI.B2, aes(factor(type), y = Y1))
c + geom_bar()
c <- ggplot(NEI.B2, aes(factor(type), y = V1))
c + geom_bar()
c <- ggplot(NEI.B2, aes(factor(type), y = V1))
c + geom_bar(stat="identity")
names(NEI.B2)[3] <- "Emissions"
c <- ggplot(NEI.B2, aes(factor(type), y = V1))
c + geom_bar(stat="identity",  main="Baltimore Emission trend 1999 - 2008 by type")
c <- ggplot(NEI.B2, aes(factor(type), y = Emissions))
c + geom_bar(stat="identity",  main="Baltimore Emission trend 1999 - 2008 by type")
c <- ggplot(NEI.B2, aes(factor(type), y = Emissions, main="Baltimore Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  )
c <- ggplot(NEI.B2, aes(factor(type), y = Emissions, title="Baltimore Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  )
c <- ggplot(NEI.B2, aes(factor(yea), y = Emissions, title="Baltimore Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  )
c <- ggplot(NEI.B2, aes(factor(year), y = Emissions, title="Baltimore Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  )
c +  facet_wrap(~ type)
c <- ggplot(NEI.B2, aes(factor(year), y = Emissions, title="Baltimore Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  )
c + facet_wrap(~ type)
c <- ggplot(NEI.B2, aes(factor(year), y = Emissions, title="Baltimore Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  )+ facet_wrap(~ type)
#Save to png
dev.copy(png, file = "plot3.png")  ## Copy my plot to a PNG file
dev.off()
c <- ggplot(NEI.B2, aes(factor(year), y = Emissions, title="Baltimore,MD Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  ) + facet_wrap(~ type)
#Save to png
dev.copy(png, file = "plot3.png")  ## Copy my plot to a PNG file
dev.off()
NEI.Baltimore <- NEI[NEI$fips == "24510",]
barplot(t(sapply(split(NEI.Baltimore$Emissions, NEI.Baltimore$year), sum)), ylab="PM2.5 emissions",
main="Baltimore,MD Emission trend 1999 - 2008")
#Save to png
dev.copy(png, file = "plot2.png")  ## Copy my plot to a PNG file
dev.off()
View(SCC)
unique(SCC$SCC.Level.One)
unique(SCC$El.Sector)
unique(SCC$EI.Sector)
SCC$SCC[grepl("coal", SCC$EI.Sector)
SCC$SCC[grepl("coal", SCC$EI.Sector)]
SCC$SCC[grepl("coal", SCC$EI.Sector)]
grepl("coal", SCC$EI.Sector)
SCC$EI.Sector)
SCC$EI.Sector
SCC$SCC[grepl("Coal", SCC$EI.Sector)]
as.vector(SCC$SCC[grepl("Coal", SCC$EI.Sector)])
SCC.coal <- as.vector(SCC$SCC[grepl("Coal", SCC$EI.Sector)])
SCC.coal <- data.frame(SCC[grepl("Coal", SCC$EI.Sector),])
View(SCC.coal)
NEI.coal <- NEI[grepl(SCC.coal, NEI$SCC]
NEI.coal <- NEI[grepl(SCC.coal, NEI$SCC)]
NEI.coal <- NEI[grepl(SCC.coal, NEI$SCC),]
NEI.coal <- NEI[,grepl(SCC.coal, NEI$SCC)]
NEI.coal <- NEI[grepl(SCC.coal, NEI$SCC)]
NEI.coal <- NEI[NEI$SCC == SCC.coal,]
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="Emission trend 1999 - 2008")
NEI.coal <- NEI[,NEI$SCC == SCC.coal]
SCC.coal
rm(SCC.coal)
SCC.coal <- as.vector(SCC[grepl("Coal", SCC$EI.Sector),])
NEI.coal <- NEI[NEI$SCC == SCC.coal,]
SCC.coal
SCC.coal <- as.vector(SCC$SCC[grepl("Coal", SCC$EI.Sector),])
rm(SCC.coal)
SCC.coal <- as.vector(SCC$SCC[grepl("Coal", SCC$EI.Sector),])
SCC.coal <- as.vector(SCC$SCC[grepl("Coal", SCC$EI.Sector)])
SCC.coal
NEI.coal <- NEI[NEI$SCC == SCC.coal,]
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="Emission trend 1999 - 2008")
main="Emission trend 1999 - 2008 from Coal Sources")
n
n
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="Emission trend 1999 - 2008 from Coal Sources")
dev.copy(png, file = "plot4.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission",
main="Emission trend 1999 - 2008")
#Save to png
dev.copy(png, file = "plot1.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008")
#Save to png
dev.copy(png, file = "plot1.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from Coal Sources")
#Save to png
dev.copy(png, file = "plot4.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from Coal Sources")
#Save to png
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from Coal Sources")
o
o
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008")
