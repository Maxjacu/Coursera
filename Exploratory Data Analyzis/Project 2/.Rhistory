install.packages("xlsx")
library("rJava", lib.loc="C:/Users/z002hezy/AppData/Local/R")
library("xlsx", lib.loc="C:/Users/z002hezy/AppData/Local/R")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileURL, destfile="attempt2.xlsx")
library(xlsx)
csv2 <- read.xlsx("attempt2.xlsx", sheetIndex=1, header=TRUE)
csv2
library(rJava)
library(xlsx)
csv2 <- read.xlsx("attempt2.xlsx", sheetIndex=1, header=TRUE)
remove.packages("xlsx")
remove.packages("rJava")
library(rJava)
install.packages("xlsx")
library(rJava)
library(rJava)
library(rJava)
remove.packages("rJava")
load("C:/Users/z002hezy/Desktop/Coding/Data Visualization/Personal/LocationHistory/CSV/das.RData")
View(locations)
locations$place[i] <- locations$Distanceto.home[i] <0.5
for (i in 1:nrow(locations))  {
locations$place[i] <- locations$Distanceto.home[i] <0.5
}
View(locations)
for (i in 1:nrow(locations))  {
locations$place[i] <-
if (locations$Distanceto.home[i] <0.5) {"Home"}
if (locations$Distanceto.work[i] <0.5) {"Work"}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5) {locations$place[i] = "Home"}
if (locations$Distanceto.work[i] <0.5) {locations$place[i] = "Work"}
}
View(locations)
locations$Distanceto.home <- ""
for (i in 1:nrow(locations))  {
locations$Distanceto.home[i] <- gcd.slc(locations$Lon[i], locations$Lat[i], home[1], home[2])
locations$Distanceto.work[i] <- gcd.slc(locations$Lon[i], locations$Lat[i], work[1], work[2])
locations$DayNr[i] <- as.Date(locations$DateTime[i])-as.Date( locations$DateTime[1])
}
locations$place <- ""
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5) {locations$place[i] = "Home" & locations$Speed[i] <0.001}
if (locations$Distanceto.work[i] <0.5) {locations$place[i] = "Work" & locations$Speed[i] <0.001}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5 & locations$Speed[i] <0.001) {locations$place[i] = "Home" }
if (locations$Distanceto.work[i] <0.5 & locations$Speed[i] <0.001) {locations$place[i] = "Work" }
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5 | locations$Speed[i] < 0.001) {locations$place[i] = "Home" }
if (locations$Distanceto.work[i] <0.5 | locations$Speed[i] < 0.001) {locations$place[i] = "Work" }
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5 ) {locations$place[i] = "Home" }
if (locations$Distanceto.work[i] <0.5 ) {locations$place[i] = "Work" }
}
locations$place <- ""
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5 & if (locations$Speed[i] < 0.001)) {locations$place[i] = "Home" }
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001) {
locations$place[i] = "Work"
}
}
}
locations$Speed
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 1) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 1) {
locations$place[i] = "Work"
}
}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001, na.rm=TRUE) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001, na.rm=TRUE) {
locations$place[i] = "Work"
}
}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001) {
locations$place[i] = "Work"
}
}
}
View(locations)
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 & locations$Speed[i+1] < 0.001) {
locations$place[i] = "Home"
}
else {
locations$commute[i+1] <- Hometo.Work
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 & locations$Speed[i+1] < 0.001) {
locations$place[i] = "Work"
}
else {
locations$commute[i+1] <- Workto.home
}
}
}
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 & locations$Speed[i+1] < 0.001) {
locations$place[i] = "Home"
}
else {
locations$commute[i+1] <- "Hometo.Work"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 & locations$Speed[i+1] < 0.001) {
locations$place[i] = "Work"
}
else {
locations$commute[i+1] <- "Workto.home"
}
}
}
View(locations)
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Home"
}
else {
locations$commute[i+1] <- "Hometo.Work"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Work"
}
else {
locations$commute[i+1] <- "Workto.home"
}
}
}
View(locations)
ocations$commute <- ""
ocations$place <- ""
locations$place <- ""
locations$commute <- ""
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Home"
}
else {
locations$commute[i+1] <- "Hometo.Work"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Work"
}
else {
locations$commute[i+1] <- "Workto.home"
}
}
}
View(locations)
locations$commute <- ""
locations$place <- ""
View(locations)
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.001 ) {
locations$place[i] = "Work"
}
}
}
View(locations)
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.01 ) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.01 ) {
locations$place[i] = "Work"
}
}
}
View(locations)
write.csv(locations, "LocationHistory_clustered.csv")
for (i in 1:nrow(locations))  {
if (locations$Distanceto.home[i] <0.5)
{ if (locations$Speed[i] < 0.01 ) {
locations$place[i] = "Home"
}
}
if (locations$Distanceto.work[i] <0.5)
{ if (locations$Speed[i] < 0.01 ) {
locations$place[i] = "Work"
}
}
}
View(locations)
library("plyr", lib.loc="C:/Users/z002hezy/AppData/Local/R")
count(locations$place)
count(locations$place[1])
count(locations$place[0])
count(locations$place[2])
NEI  <- readRDS("summarySCC_PM25.rds")
SCC  <- readRDS("Source_Classification_Code.rds")
setwd("~/GitHub/Coursera2/Exploratory Data Analyzis/Project 2")
#Read data
NEI  <- readRDS("summarySCC_PM25.rds")
SCC  <- readRDS("Source_Classification_Code.rds")
#Plot 1: Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
barplot(t(sapply(split(NEI$Emissions, NEI$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008")
#Save to png
dev.copy(png, file = "plot1.png")  ## Copy my plot to a PNG file
dev.off()
NEI.Baltimore <- NEI[NEI$fips == "24510",]
barplot(t(sapply(split(NEI.Baltimore$Emissions, NEI.Baltimore$year), sum)), ylab="PM2.5 emissions",
main="Baltimore,MD Emission trend 1999 - 2008")
#Save to png
dev.copy(png, file = "plot2.png")  ## Copy my plot to a PNG file
dev.off()
#         variable, which of these four sources have seen decreases in emissions from 1999â€“2008
NEI.B <- data.table(NEI)
#         for Baltimore City?
names(NEI.B2)[3] <- "Emissions"
NEI.B2 <- NEI.B[, sum(Emissions), by = list(year, type)]
c <- ggplot(NEI.B2, aes(factor(year), y = Emissions, title="Baltimore,MD Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  ) + facet_wrap(~ type)
require(ggplot2)
require(data.table)
NEI.B <- data.table(NEI)
NEI.B2 <- NEI.B[, sum(Emissions), by = list(year, type)]
names(NEI.B2)[3] <- "Emissions"
c <- ggplot(NEI.B2, aes(factor(year), y = Emissions, title="Baltimore,MD Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  ) + facet_wrap(~ type)
#Save to png
dev.copy(png, file = "plot3.png")  ## Copy my plot to a PNG file
dev.off()
setnames(NEI.B2)[3] <- "Emissions"
NEI.B2 <- data.table(NEI)[, sum(Emissions), by = list(year, type)]
names(NEI.B2)[3] <- "Emissions"
NEI.B2 <- data.table(NEI)[, sum(Emissions), by = list(year, type)]
names(NEI.B2)[3] <- "Emissions"
c <- ggplot(NEI.B2, aes(factor(year), y = Emissions, title="Baltimore,MD Emission trend 1999 - 2008 by type"))
c + geom_bar(stat="identity",  ) + facet_wrap(~ type)
dev.copy(png, file = "plot3.png")  ## Copy my plot to a PNG file
dev.off()
SCC.coal <- as.vector(SCC$SCC[grepl("Coal", SCC$EI.Sector)])
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from Coal Sources")
#Save to png
dev.copy(png, file = "plot4.png")  ## Copy my plot to a PNG file
dev.off()
View(SCC)
SCC.coal <- as.vector(SCC$SCC[grepl("Coal", SCC$Short.Name)])
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from Coal Sources")
#Save to png
dev.copy(png, file = "plot4.png")  ## Copy my plot to a PNG file
dev.off()
NEI.B <- NEI[NEI$fips == "24510",]
unique(SCC[5])
unique(SCC[4])
unique(SCC[3])
unique(SCC[5])
unique(SCC[6])
unique(SCC[7])
unique(SCC[8])
SCC.mv <- as.vector(SCC$SCC[grepl("Vehicles", SCC$Short.Name)])
SCC.mv <- as.vector(SCC[grepl("Vehicles", SCC$Short.Name)])
SCC.mv <- data.frame(SCC[grepl("Vehicles", SCC$Short.Name)])
SCC.mv <- data.frame(SCC[grepl("Vehicles", SCC$Short.Name),])
View(SCC.mv)
SCC.mv <- SCC.mv[SCC.mv$Data.Category = "Onroad"]
SCC.mv <- SCC.mv[SCC.mv$Data.Category == "Onroad"]
SCC.mv <- SCC$SCC[SCC.mv$Data.Category == "Onroad"]
rm(SCC.mv)
SCC.mv <- SCC$SCC[SCC.mv$Data.Category == "Onroad"]
SCC.mv <- SCC$SCC[SCC$Data.Category == "Onroad"]
SCC.coal <- as.vector(SCC$SCC[grepl("Coal", SCC$Short.Name)|grepl("Fuel Comb", SCC$Short.Name)])
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from Coal Sources")
#Save to png
dev.copy(png, file = "plot4.png")  ## Copy my plot to a PNG file
dev.off()
SCC.mv <- SCC$SCC[SCC$Data.Category == "Onroad"]
NEI.B.mv <- NEI.B[NEI.B$SCC %in% SCC.mv,]
barplot(t(sapply(split(NEI.coNEI.B.mval$Emissions, NEI.B.mv$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from mobile vehicles")
#Save to png
barplot(t(sapply(split(NEI.B.mv$Emissions, NEI.B.mv$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from mobile vehicles")
#Save to png
dev.copy(png, file = "plot4.png")  ## Copy my plot to a PNG file
dev.copy(png, file = "plot5.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from Coal Sources")
dev.copy(png, file = "plot4.png")  ## Copy my plot to a PNG file
dev.off()
#Save to png
barplot(t(sapply(split(NEI.B.mv$Emissions, NEI.B.mv$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend 1999 - 2008 from mobile vehicles")
#Save to png
dev.copy(png, file = "plot5.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI.B.mv$Emissions, NEI.B.mv$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend from mobile vehicles")
#Save to png
barplot(t(sapply(split(NEI.B.mv$Emissions, NEI.B.mv$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend from mobile vehicles")
#Save to png
dev.copy(png, file = "plot5.png")  ## Copy my plot to a PNG file
dev.off()
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend from Coal Sources")
dev.copy(png, file = "plot4.png")  ## Copy my plot to a PNG file
#Save to png
dev.off()
barplot(t(sapply(split(NEI.coal$Emissions, NEI.coal$year), sum)), ylab="PM2.5 emission",
main="USA Emission trend from Coal Sources")
